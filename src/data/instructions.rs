
// this is generated code, don't modify it manually!

use once_cell::sync::Lazy;
use std::collections::HashMap;
use crate::model::{RISCVExtension as EXT, Mnemonic as M};

type Row = (&'static str, M, EXT, u8);

pub (crate) static INSTRUCTIONS: Lazy<HashMap<u16, Row>> = Lazy::new(|| {
    HashMap::from([

        (0x000c, ("add", M::Add, EXT::I, 32)),
        (0x0004, ("addi", M::Addi, EXT::I, 32)),
        (0x00ec, ("and", M::And, EXT::I, 32)),
        (0x00e4, ("andi", M::Andi, EXT::I, 32)),
        (0x20ec, ("andn", M::Andn, EXT::Zbb, 32)),
        (0x0005, ("auipc", M::Auipc, EXT::I, 32)),
        (0x242c, ("bclr", M::Bclr, EXT::Zbs, 32)),
        (0x0018, ("beq", M::Beq, EXT::I, 32)),
        (0x24ac, ("bext", M::Bext, EXT::Zbs, 32)),
        (0x00b8, ("bge", M::Bge, EXT::I, 32)),
        (0x00f8, ("bgeu", M::Bgeu, EXT::I, 32)),
        (0x342c, ("binv", M::Binv, EXT::Zbs, 32)),
        (0x0098, ("blt", M::Blt, EXT::I, 32)),
        (0x00d8, ("bltu", M::Bltu, EXT::I, 32)),
        (0x0038, ("bne", M::Bne, EXT::I, 32)),
        (0x142c, ("bset", M::Bset, EXT::Zbs, 32)),
        (0x052c, ("clmul", M::Clmul, EXT::Zbc, 32)),
        (0x056c, ("clmulh", M::Clmulh, EXT::Zbc, 32)),
        (0x054c, ("clmulr", M::Clmulr, EXT::Zbc, 32)),
        (0x007c, ("csrrc", M::Csrrc, EXT::Zicsr, 32)),
        (0x00fc, ("csrrci", M::Csrrci, EXT::Zicsr, 32)),
        (0x005c, ("csrrs", M::Csrrs, EXT::Zicsr, 32)),
        (0x00dc, ("csrrsi", M::Csrrsi, EXT::Zicsr, 32)),
        (0x003c, ("csrrw", M::Csrrw, EXT::Zicsr, 32)),
        (0x00bc, ("csrrwi", M::Csrrwi, EXT::Zicsr, 32)),
        (0x07ac, ("czero_eqz", M::Czero_eqz, EXT::Zicond, 32)),
        (0x07ec, ("czero_nez", M::Czero_nez, EXT::Zicond, 32)),
        (0x018c, ("div", M::Div, EXT::M, 32)),
        (0x01ac, ("divu", M::Divu, EXT::M, 32)),
        (0x0003, ("fence", M::Fence, EXT::I, 32)),
        (0x0023, ("fence_i", M::Fence_i, EXT::Zifencei, 32)),
        (0x5154, ("feq_d", M::Feq_d, EXT::D, 32)),
        (0x5254, ("feq_h", M::Feq_h, EXT::Zfh, 32)),
        (0x5354, ("feq_q", M::Feq_q, EXT::Q, 32)),
        (0x5054, ("feq_s", M::Feq_s, EXT::F, 32)),
        (0x0061, ("fld", M::Fld, EXT::D, 32)),
        (0x5114, ("fle_d", M::Fle_d, EXT::D, 32)),
        (0x5214, ("fle_h", M::Fle_h, EXT::Zfh, 32)),
        (0x5314, ("fle_q", M::Fle_q, EXT::Q, 32)),
        (0x5014, ("fle_s", M::Fle_s, EXT::F, 32)),
        (0x5194, ("fleq_d", M::Fleq_d, EXT::Zfa, 32)),
        (0x5294, ("fleq_h", M::Fleq_h, EXT::Zfa, 32)),
        (0x5394, ("fleq_q", M::Fleq_q, EXT::Zfa, 32)),
        (0x5094, ("fleq_s", M::Fleq_s, EXT::Zfa, 32)),
        (0x0021, ("flh", M::Flh, EXT::Zfh, 32)),
        (0x0081, ("flq", M::Flq, EXT::Q, 32)),
        (0x5134, ("flt_d", M::Flt_d, EXT::D, 32)),
        (0x5234, ("flt_h", M::Flt_h, EXT::Zfh, 32)),
        (0x5334, ("flt_q", M::Flt_q, EXT::Q, 32)),
        (0x5034, ("flt_s", M::Flt_s, EXT::F, 32)),
        (0x51b4, ("fltq_d", M::Fltq_d, EXT::Zfa, 32)),
        (0x52b4, ("fltq_h", M::Fltq_h, EXT::Zfa, 32)),
        (0x53b4, ("fltq_q", M::Fltq_q, EXT::Zfa, 32)),
        (0x50b4, ("fltq_s", M::Fltq_s, EXT::Zfa, 32)),
        (0x0041, ("flw", M::Flw, EXT::F, 32)),
        (0x1534, ("fmax_d", M::Fmax_d, EXT::D, 32)),
        (0x1634, ("fmax_h", M::Fmax_h, EXT::Zfh, 32)),
        (0x1734, ("fmax_q", M::Fmax_q, EXT::Q, 32)),
        (0x1434, ("fmax_s", M::Fmax_s, EXT::F, 32)),
        (0x1574, ("fmaxm_d", M::Fmaxm_d, EXT::Zfa, 32)),
        (0x1674, ("fmaxm_h", M::Fmaxm_h, EXT::Zfa, 32)),
        (0x1774, ("fmaxm_q", M::Fmaxm_q, EXT::Zfa, 32)),
        (0x1474, ("fmaxm_s", M::Fmaxm_s, EXT::Zfa, 32)),
        (0x1514, ("fmin_d", M::Fmin_d, EXT::D, 32)),
        (0x1614, ("fmin_h", M::Fmin_h, EXT::Zfh, 32)),
        (0x1714, ("fmin_q", M::Fmin_q, EXT::Q, 32)),
        (0x1414, ("fmin_s", M::Fmin_s, EXT::F, 32)),
        (0x1554, ("fminm_d", M::Fminm_d, EXT::Zfa, 32)),
        (0x1654, ("fminm_h", M::Fminm_h, EXT::Zfa, 32)),
        (0x1754, ("fminm_q", M::Fminm_q, EXT::Zfa, 32)),
        (0x1454, ("fminm_s", M::Fminm_s, EXT::Zfa, 32)),
        (0x0069, ("fsd", M::Fsd, EXT::D, 32)),
        (0x1114, ("fsgnj_d", M::Fsgnj_d, EXT::D, 32)),
        (0x1214, ("fsgnj_h", M::Fsgnj_h, EXT::Zfh, 32)),
        (0x1314, ("fsgnj_q", M::Fsgnj_q, EXT::Q, 32)),
        (0x1014, ("fsgnj_s", M::Fsgnj_s, EXT::F, 32)),
        (0x1134, ("fsgnjn_d", M::Fsgnjn_d, EXT::D, 32)),
        (0x1234, ("fsgnjn_h", M::Fsgnjn_h, EXT::Zfh, 32)),
        (0x1334, ("fsgnjn_q", M::Fsgnjn_q, EXT::Q, 32)),
        (0x1034, ("fsgnjn_s", M::Fsgnjn_s, EXT::F, 32)),
        (0x1154, ("fsgnjx_d", M::Fsgnjx_d, EXT::D, 32)),
        (0x1254, ("fsgnjx_h", M::Fsgnjx_h, EXT::Zfh, 32)),
        (0x1354, ("fsgnjx_q", M::Fsgnjx_q, EXT::Q, 32)),
        (0x1054, ("fsgnjx_s", M::Fsgnjx_s, EXT::F, 32)),
        (0x0029, ("fsh", M::Fsh, EXT::Zfh, 32)),
        (0x0089, ("fsq", M::Fsq, EXT::Q, 32)),
        (0x0049, ("fsw", M::Fsw, EXT::F, 32)),
        (0x001b, ("jal", M::Jal, EXT::I, 32)),
        (0x0019, ("jalr", M::Jalr, EXT::I, 32)),
        (0x0000, ("lb", M::Lb, EXT::I, 32)),
        (0x0080, ("lbu", M::Lbu, EXT::I, 32)),
        (0x0020, ("lh", M::Lh, EXT::I, 32)),
        (0x00a0, ("lhu", M::Lhu, EXT::I, 32)),
        (0x000d, ("lui", M::Lui, EXT::I, 32)),
        (0x0040, ("lw", M::Lw, EXT::I, 32)),
        (0x05cc, ("max", M::Max, EXT::Zbb, 32)),
        (0x05ec, ("maxu", M::Maxu, EXT::Zbb, 32)),
        (0x058c, ("min", M::Min, EXT::Zbb, 32)),
        (0x05ac, ("minu", M::Minu, EXT::Zbb, 32)),
        (0x010c, ("mul", M::Mul, EXT::M, 32)),
        (0x012c, ("mulh", M::Mulh, EXT::M, 32)),
        (0x014c, ("mulhsu", M::Mulhsu, EXT::M, 32)),
        (0x016c, ("mulhu", M::Mulhu, EXT::M, 32)),
        (0x00cc, ("or", M::Or, EXT::I, 32)),
        (0x00c4, ("ori", M::Ori, EXT::I, 32)),
        (0x20cc, ("orn", M::Orn, EXT::Zbb, 32)),
        (0x048c, ("pack", M::Pack, EXT::Zbkb, 32)),
        (0x04ec, ("packh", M::Packh, EXT::Zbkb, 32)),
        (0x01cc, ("rem", M::Rem, EXT::M, 32)),
        (0x01ec, ("remu", M::Remu, EXT::M, 32)),
        (0x302c, ("rol", M::Rol, EXT::Zbb, 32)),
        (0x30ac, ("ror", M::Ror, EXT::Zbb, 32)),
        (0x0008, ("sb", M::Sb, EXT::I, 32)),
        (0x0028, ("sh", M::Sh, EXT::I, 32)),
        (0x104c, ("sh1add", M::Sh1add, EXT::Zba, 32)),
        (0x108c, ("sh2add", M::Sh2add, EXT::Zba, 32)),
        (0x10cc, ("sh3add", M::Sh3add, EXT::Zba, 32)),
        (0x002c, ("sll", M::Sll, EXT::I, 32)),
        (0x004c, ("slt", M::Slt, EXT::I, 32)),
        (0x0044, ("slti", M::Slti, EXT::I, 32)),
        (0x0064, ("sltiu", M::Sltiu, EXT::I, 32)),
        (0x006c, ("sltu", M::Sltu, EXT::I, 32)),
        (0x20ac, ("sra", M::Sra, EXT::I, 32)),
        (0x00ac, ("srl", M::Srl, EXT::I, 32)),
        (0x200c, ("sub", M::Sub, EXT::I, 32)),
        (0x0048, ("sw", M::Sw, EXT::I, 32)),
        (0x2075, ("vadc_vim", M::Vadc_vim, EXT::V, 32)),
        (0x2015, ("vadc_vvm", M::Vadc_vvm, EXT::V, 32)),
        (0x2095, ("vadc_vxm", M::Vadc_vxm, EXT::V, 32)),
        (0x455d, ("vaeskf1_vi", M::Vaeskf1_vi, EXT::Zvkned, 32)),
        (0x555d, ("vaeskf2_vi", M::Vaeskf2_vi, EXT::Zvkned, 32)),
        (0x2f55, ("vcompress_vm", M::Vcompress_vm, EXT::V, 32)),
        (0x2eb5, ("vfmerge_vfm", M::Vfmerge_vfm, EXT::V, 32)),
        (0x595d, ("vghsh_vv", M::Vghsh_vv, EXT::Zvkg, 32)),
        (0x2375, ("vmadc_vi", M::Vmadc_vi, EXT::V, 32)),
        (0x2275, ("vmadc_vim", M::Vmadc_vim, EXT::V, 32)),
        (0x2315, ("vmadc_vv", M::Vmadc_vv, EXT::V, 32)),
        (0x2215, ("vmadc_vvm", M::Vmadc_vvm, EXT::V, 32)),
        (0x2395, ("vmadc_vx", M::Vmadc_vx, EXT::V, 32)),
        (0x2295, ("vmadc_vxm", M::Vmadc_vxm, EXT::V, 32)),
        (0x3355, ("vmand_mm", M::Vmand_mm, EXT::V, 32)),
        (0x3155, ("vmandn_mm", M::Vmandn_mm, EXT::V, 32)),
        (0x2e75, ("vmerge_vim", M::Vmerge_vim, EXT::V, 32)),
        (0x2e15, ("vmerge_vvm", M::Vmerge_vvm, EXT::V, 32)),
        (0x2e95, ("vmerge_vxm", M::Vmerge_vxm, EXT::V, 32)),
        (0x3b55, ("vmnand_mm", M::Vmnand_mm, EXT::V, 32)),
        (0x3d55, ("vmnor_mm", M::Vmnor_mm, EXT::V, 32)),
        (0x3555, ("vmor_mm", M::Vmor_mm, EXT::V, 32)),
        (0x3955, ("vmorn_mm", M::Vmorn_mm, EXT::V, 32)),
        (0x2715, ("vmsbc_vv", M::Vmsbc_vv, EXT::V, 32)),
        (0x2615, ("vmsbc_vvm", M::Vmsbc_vvm, EXT::V, 32)),
        (0x2795, ("vmsbc_vx", M::Vmsbc_vx, EXT::V, 32)),
        (0x2695, ("vmsbc_vxm", M::Vmsbc_vxm, EXT::V, 32)),
        (0x3f55, ("vmxnor_mm", M::Vmxnor_mm, EXT::V, 32)),
        (0x3755, ("vmxor_mm", M::Vmxor_mm, EXT::V, 32)),
        (0x2415, ("vsbc_vvm", M::Vsbc_vvm, EXT::V, 32)),
        (0x2495, ("vsbc_vxm", M::Vsbc_vxm, EXT::V, 32)),
        (0x40f5, ("vsetvl", M::Vsetvl, EXT::V, 32)),
        (0x5d5d, ("vsha2ch_vv", M::Vsha2ch_vv, EXT::Zvknha, 32)),
        (0x5f5d, ("vsha2cl_vv", M::Vsha2cl_vv, EXT::Zvknha, 32)),
        (0x5b5d, ("vsha2ms_vv", M::Vsha2ms_vv, EXT::Zvknha, 32)),
        (0x575d, ("vsm3c_vi", M::Vsm3c_vi, EXT::Zvksh, 32)),
        (0x415d, ("vsm3me_vv", M::Vsm3me_vv, EXT::Zvksh, 32)),
        (0x435d, ("vsm4k_vi", M::Vsm4k_vi, EXT::Zvksed, 32)),
        (0x208c, ("xnor", M::Xnor, EXT::Zbb, 32)),
        (0x008c, ("xor", M::Xor, EXT::I, 32)),
        (0x0084, ("xori", M::Xori, EXT::I, 32)),
        (0x144c, ("xperm4", M::Xperm4, EXT::Zbkx, 32)),
        (0x148c, ("xperm8", M::Xperm8, EXT::Zbkx, 32)),
    ])
});
